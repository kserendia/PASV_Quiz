Write a function named starTriangle that takes n as an argument and returns a triangle of n strings consisting of asterisks (*). 
All lines except the last one end with a \ n newline character.

For example, for n = 7, the line should be:

"* \ n ** \ n *** \ n **** \ n ***** \ n ****** \ n *******"

When outputting to the console, such a line is displayed as a "triangle":
"*
**
***
****
*****
******
*******"

Note: When checking the solution in tests, the line feed character is not displayed.

Examples:

function starTriangle (1) must return: "*";
function starTriangle (3) should return: "* \ n ** \ n ***".


Solution #1
function starTriangle(n) {
  let str = '';
  for(let i = 1; i <= n; i++) {
    for(let j = 1; j <= i; j++) {
      str += '*';
    }
    if (i !== n) str += '\n';
  }
  return str;
}

Solution #2

function starTriangle(n) {
  let str = '';
  for(let i = 1; i <=n; i++) {
    str += '*'.repeat(i) + '\n';
  }
  return str.slice(0, -1);
}


