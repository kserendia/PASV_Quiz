Write a function called upsideDown that takes n as an argument and returns a triangle of n strings of asterisks (*). 
The first line contains n stars, the second contains (n-1) asterisk, ..., the last line contains 1 asterisk.

All lines except the last one end with a \ n newline character.

For example, for n = 5, the line should be:

"***** \ n **** \ n *** \ n ** \ n *"

When outputting to the console, such a line is displayed as an "inverted triangle":
*******
******
*****
****
***
**
*
Note: When checking the solution in tests, the line feed character is not displayed.

Examples:

the upsideDown (1) function must return: "*";
upsideDown (3) should return: "*** \ n ** \ n *".


Solution:

function upsideDown(n){
let str = '';
  for (let i = 0; i <= n; i++) {
    for (let j = n - 1; j >= i; j--) {
      str += '*';
    }
    if (i !== n) str += '\n';
  }
  return str.trim();
}
